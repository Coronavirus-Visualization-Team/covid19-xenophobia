plot1 <- ggplot(data, aes(date, neg_count)) +
geom_line(na.rm = TRUE) +
xlab("date") +
ylab("negative tweet count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b '%y", limits = c(as.Date("2020-01-27"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count), max(data$neg_count),
by = 2500), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
geom_vline(xintercept = spikes, linetype = 3, colour = "black") +
coord_cartesian(ylim = c(0, 14000), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines"))
print(add_labels(plot1, 15200))
add_labels = function(plot, h) {
plot + geom_label(aes(x = as.Date(spikes[1]), y = h, label = "A"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[2]), y = h, label = "B"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[3]), y = h, label = "C"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[4]), y = h, label = "D"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[5]), y = h, label = "E"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[6]), y = h, label = "F"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[7]), y = h, label = "G"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[8]), y = h, label = "H"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[9]), y = h, label = "I"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[10]), y = h, label = "J"), label.size = 0)
}
plot1 <- ggplot(data, aes(date, neg_count)) +
geom_line(na.rm = TRUE) +
xlab("date") +
ylab("negative tweet count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b '%y", limits = c(as.Date("2020-01-27"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count), max(data$neg_count),
by = 2500), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
geom_vline(xintercept = spikes, linetype = 3, colour = "black") +
coord_cartesian(ylim = c(0, 14000), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines"))
print(add_labels(plot1, 15200))
add_labels = function(plot, h) {
plot + geom_label(aes(x = as.Date(spikes[1]), y = h, label = "A"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[2]), y = h, label = "B"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[3]), y = h, label = "C"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[4]), y = h, label = "D"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[5]), y = h, label = "E"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[6]), y = h, label = "F"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[7]), y = h, label = "G"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[9]), y = h, label = "I"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[8]), y = h, label = "H"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[10]), y = h, label = "J"), label.size = 0)
}
plot1 <- ggplot(data, aes(date, neg_count)) +
geom_line(na.rm = TRUE) +
xlab("date") +
ylab("negative tweet count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b '%y", limits = c(as.Date("2020-01-27"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count), max(data$neg_count),
by = 2500), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
geom_vline(xintercept = spikes, linetype = 3, colour = "black") +
coord_cartesian(ylim = c(0, 14000), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines"))
print(add_labels(plot1, 15200))
add_labels = function(plot, h) {
plot + geom_label(aes(x = as.Date(spikes[1]), y = h, label = "A"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[2]), y = h, label = "B"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[3]), y = h, label = "C"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[4]), y = h, label = "D"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[5]), y = h, label = "E"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[6]), y = h, label = "F"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[7]), y = h, label = "G"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[8]), y = h, label = "H"), label.size = 0, label.padding = 0) +
geom_label(aes(x = as.Date(spikes[9]), y = h, label = "I"), label.size = 0, label.padding = 0) +
geom_label(aes(x = as.Date(spikes[10]), y = h, label = "J"), label.size = 0)
}
plot1 <- ggplot(data, aes(date, neg_count)) +
geom_line(na.rm = TRUE) +
xlab("date") +
ylab("negative tweet count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b '%y", limits = c(as.Date("2020-01-27"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count), max(data$neg_count),
by = 2500), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
geom_vline(xintercept = spikes, linetype = 3, colour = "black") +
coord_cartesian(ylim = c(0, 14000), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines"))
print(add_labels(plot1, 15200))
plot + geom_label(aes(x = as.Date(spikes[1]), y = h, label = "A"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[2]), y = h, label = "B"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[3]), y = h, label = "C"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[4]), y = h, label = "D"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[5]), y = h, label = "E"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[6]), y = h, label = "F"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[7]), y = h, label = "G"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[8]), y = h, label = "H"), label.size = 0, label.padding = 0.1) +
geom_label(aes(x = as.Date(spikes[9]), y = h, label = "I"), label.size = 0, label.padding = 0.1) +
geom_label(aes(x = as.Date(spikes[10]), y = h, label = "J"), label.size = 0)
add_labels = function(plot, h) {
plot + geom_label(aes(x = as.Date(spikes[1]), y = h, label = "A"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[2]), y = h, label = "B"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[3]), y = h, label = "C"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[4]), y = h, label = "D"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[5]), y = h, label = "E"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[6]), y = h, label = "F"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[7]), y = h, label = "G"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[8]), y = h, label = "H"), label.size = 0, label.padding = 0.1) +
geom_label(aes(x = as.Date(spikes[9]), y = h, label = "I"), label.size = 0, label.padding = 0.1) +
geom_label(aes(x = as.Date(spikes[10]), y = h, label = "J"), label.size = 0)
}
plot1 <- ggplot(data, aes(date, neg_count)) +
geom_line(na.rm = TRUE) +
xlab("date") +
ylab("negative tweet count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b '%y", limits = c(as.Date("2020-01-27"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count), max(data$neg_count),
by = 2500), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
geom_vline(xintercept = spikes, linetype = 3, colour = "black") +
coord_cartesian(ylim = c(0, 14000), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines"))
print(add_labels(plot1, 15200))
add_labels = function(plot, h) {
plot + geom_label(aes(x = as.Date(spikes[1]), y = h, label = "A"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[2]), y = h, label = "B"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[3]), y = h, label = "C"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[4]), y = h, label = "D"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[5]), y = h, label = "E"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[6]), y = h, label = "F"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[7]), y = h, label = "G"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[8]), y = h, label = "H"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[9]), y = h, label = "I"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[10]), y = h, label = "J"), label.size = 0)
}
plot1 <- ggplot(data, aes(date, neg_count)) +
geom_line(na.rm = TRUE) +
xlab("date") +
ylab("negative tweet count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b '%y", limits = c(as.Date("2020-01-27"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count), max(data$neg_count),
by = 2500), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
geom_vline(xintercept = spikes, linetype = 3, colour = "black") +
coord_cartesian(ylim = c(0, 14000), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines"))
print(add_labels(plot1, 15200))
add_labels = function(plot, h) {
plot + geom_label(aes(x = as.Date(spikes[1]), y = h, label = "A"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[2]), y = h, label = "B"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[3]), y = h, label = "C"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[4]), y = h, label = "D"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[5]), y = h, label = "E"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[6]), y = h, label = "F"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[7]), y = h, label = "G"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[8]), y = h, label = "H"), label.size = 0, label.padding = unit(0.1, "lines")) +
geom_label(aes(x = as.Date(spikes[9]), y = h, label = "I"), label.size = 0, label.padding = unit(0.1, "lines")) +
geom_label(aes(x = as.Date(spikes[10]), y = h, label = "J"), label.size = 0)
}
plot1 <- ggplot(data, aes(date, neg_count)) +
geom_line(na.rm = TRUE) +
xlab("date") +
ylab("negative tweet count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b '%y", limits = c(as.Date("2020-01-27"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count), max(data$neg_count),
by = 2500), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
geom_vline(xintercept = spikes, linetype = 3, colour = "black") +
coord_cartesian(ylim = c(0, 14000), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines"))
print(add_labels(plot1, 15200))
add_labels = function(plot, h) {
plot + geom_label(aes(x = as.Date(spikes[1]), y = h, label = "A"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[2]), y = h, label = "B"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[3]), y = h, label = "C"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[4]), y = h, label = "D"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[5]), y = h, label = "E"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[6]), y = h, label = "F"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[7]), y = h, label = "G"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[8]), y = h, label = "H"), label.size = 0, label.padding = unit(0.1, "lines")) +
geom_label(aes(x = as.Date(spikes[9]), y = h, label = "I"), label.size = 0, label.padding = unit(0.1, "lines")) +
geom_label(aes(x = as.Date(spikes[10]), y = h, label = "J"), label.size = 0)
}
plot1 <- ggplot(data, aes(date, neg_count)) +
geom_line(na.rm = TRUE) +
xlab("Date (2020") +
ylab("Negative Tweet Count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-01-27"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count), max(data$neg_count),
by = 2500), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
geom_vline(xintercept = spikes, linetype = 3, colour = "black") +
coord_cartesian(ylim = c(0, 14000), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines"))
print(add_labels(plot1, 15200))
add_labels = function(plot, h) {
plot + geom_label(aes(x = as.Date(spikes[1]), y = h, label = "A"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[2]), y = h, label = "B"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[3]), y = h, label = "C"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[4]), y = h, label = "D"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[5]), y = h, label = "E"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[6]), y = h, label = "F"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[7]), y = h, label = "G"), label.size = 0) +
geom_label(aes(x = as.Date(spikes[8]), y = h, label = "H"), label.size = 0, label.padding = unit(0.1, "lines")) +
geom_label(aes(x = as.Date(spikes[9]), y = h, label = "I"), label.size = 0, label.padding = unit(0.1, "lines")) +
geom_label(aes(x = as.Date(spikes[10]), y = h, label = "J"), label.size = 0)
}
plot1 <- ggplot(data, aes(date, neg_count)) +
geom_line(na.rm = TRUE) +
xlab("Date (2020)") +
ylab("Negative Tweet Count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-01-27"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count), max(data$neg_count),
by = 2500), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
geom_vline(xintercept = spikes, linetype = 3, colour = "black") +
coord_cartesian(xlim = as.Date(c("2020-02-01", "2020-11-01")), ylim = c(0, 14000), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines"))
print(add_labels(plot1, 15200))
plot1 <- ggplot(data, aes(date, neg_count)) +
geom_line(na.rm = TRUE) +
xlab("Date (2020)") +
ylab("Negative Tweet Count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-02-01"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count), max(data$neg_count),
by = 2500), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
geom_vline(xintercept = spikes, linetype = 3, colour = "black") +
coord_cartesian(ylim = c(0, 14000), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines"))
print(add_labels(plot1, 15200))
plot1 <- ggplot(data, aes(date, neg_count)) +
geom_line(na.rm = TRUE) +
xlab("Date (2020)") +
ylab("Number of Negative Tweets") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-02-01"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count), max(data$neg_count),
by = 2500), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
geom_vline(xintercept = spikes, linetype = 3, colour = "black") +
coord_cartesian(ylim = c(0, 14000), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines"))
print(add_labels(plot1, 15200))
plot2 <- ggplot(data, aes(date, neg_count / total)) +
geom_line(na.rm = TRUE) +
xlab("date") +
ylab("negative tweet proportion") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-02-01"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count / data$total), max(data$neg_count / data$total),
by = 0.1), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
coord_cartesian(ylim = c(0, 0.525), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines")) +
geom_vline(xintercept = spikes,linetype = 3, colour = "black")
print(add_labels(plot2, 0.575))
plot2 <- ggplot(data, aes(date, neg_count / total)) +
geom_line(na.rm = TRUE) +
xlab("Date (2020)") +
ylab("Proportion of Negative Tweets") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-02-01"), NA)) +
scale_y_continuous(breaks = round(seq(min(data$neg_count / data$total), max(data$neg_count / data$total),
by = 0.1), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
coord_cartesian(ylim = c(0, 0.525), clip = "off") +
theme(plot.margin = unit(c(3,1,1,1), "lines")) +
geom_vline(xintercept = spikes,linetype = 3, colour = "black")
print(add_labels(plot2, 0.575))
rm(list = ls())
data <- read.csv("../slur-data/slur_counts.csv")
data
sum(data$chigger)
sum(data$chinaman)
sum(data$chinazi)
sum(data$gook)
rowSums(data)
rowSums(data[,2:])
rowSums(data[,2:10])
rowSums(data[,2:11])
rowSums(data[,0:11])
rowSums(data[,0:10])
rowSums(data[,1:10])
rowSums(data[,2:10])
data
library(ggplot2)
setwd("/Users/michelle/Documents/covid19-xenophobia/data-viz")
data <- read.csv("../slur-data/slur_counts.csv")
data$date <- as.Date(data$date)
data$total <- rowSums(data[,2:10])
ggplot(data, aes(date, total)) +
geom_line(na.rm = TRUE) +
xlab("date") +
ylab("slur count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-01-27"), NA)) +
scale_y_continuous(breaks = round(seq(0, max(data$total),
by = 100), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
ggplot(data, aes(date, total)) +
geom_line(na.rm = TRUE) +
xlab("date") +
ylab("slur count") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-02-01"), NA)) +
scale_y_continuous(breaks = round(seq(0, max(data$total),
by = 100), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
ggplot(data, aes(date, total)) +
geom_line(na.rm = TRUE) +
xlab("Date (2020)") +
ylab("Number of Tweets Containing Slurs") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-02-01"), NA)) +
scale_y_continuous(breaks = round(seq(0, max(data$total),
by = 100), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
ggplot(data, aes(date, total)) +
geom_line(na.rm = TRUE) +
xlab("Date (2020)") +
ylab("Number of Tweets WithSlurs") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-02-01"), NA)) +
scale_y_continuous(breaks = round(seq(0, max(data$total),
by = 100), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
ggplot(data, aes(date, total)) +
geom_line(na.rm = TRUE) +
xlab("Date (2020)") +
ylab("Number of Tweets With Slurs") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-02-01"), NA)) +
scale_y_continuous(breaks = round(seq(0, max(data$total),
by = 100), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
top_data
top_data <- read.csv("../slur-data/top_slurs.csv")
top_data
top_data["chinazi"]
top_data["chinazi"]$count
data$chinazi.name
name(data$chinazi)
colnames(data)
colnames(data)[2:-2]
colnames(data)[2:7]
colnames(data)[2:9]
colnames(data)[2:10]
filter(data, date > as.Date("2020-02-01"))
filter(data, date > as.Date("2020-02-01"))
filter(data, date > "2020-02-01")
subset(date, date > "2020-02-01")
data$date
typeof(data$date)
data$date <- as.Date(data$date)
typeof(data$date)
data
typeof(as.Date(data$date))
filter(data, date > "2020-02-01")
data$date <- as.Date(data$date, format= "%Y-%m-%d")
typeof(data$date)
data$date <- as.Date(data$date, format= "%Y-%m-%d")
filter(data, date > "2020-02-01")
data[(data$date > "2020-02-01"),]
data[(data$date >= "2020-02-01"),]
data$date <- as.Date(data$date, format= "%Y-%m-%d")
data <- data[(data$date >= "2020-02-01"),]
data$total <- rowSums(data[,2:10])
ggplot(data, aes(date, total)) +
geom_line(na.rm = TRUE) +
xlab("Date (2020)") +
ylab("Number of Tweets With Slurs") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-02-01"), NA)) +
scale_y_continuous(breaks = round(seq(0, max(data$total),
by = 100), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
top_data <- read.csv("../slur-data/top_slurs.csv")
sum(data[2:10])
colSums(data[2:10])
colSums(data[2:10])[2:2,:]
colSums(data[2:10])[1:2]
sums <- colSums(data[2:10])[1:2]
colnames(sums)
type(sums)
typeof(sums)
sums["chinazi"]
sums
colSums(data[2:10])[1:2]
colSums(data[2:10])
sums <- colSums(data[2:10])
typeof(sums)
typeof(data)
sums.string
sums.str
sums
sums[0]
sums[1]
typeof(sums[1])
sums[1] + 2
count <- colSums(data[2:10])
top_data <- data.frame(slur, count)
slur <- colnames(data)[2:10]
count <- colSums(data[2:10])
top_data <- data.frame(slur, count)
sums <- colSums(data[2:10])
top_data
top_data <- data.frame(count)
top_data
count <- colSums(data[2:10])
top_data <- data.frame(slur, unname(count))
top_data
slur <- colnames(data)[2:10]
count <- unname(colSums(data[2:10]))
top_data <- data.frame(slur, count)
top_data
ggplot(top_data, aes(slur, count)) +
geom_bar(stat="identity") +
xlab("slur") +
ylab("total count") +
scale_y_continuous(breaks = round(seq(0, max(top_data$count),
by = 2500), 1)) + theme_bw()
ggplot(top_data, aes(count, slur)) +
geom_bar(stat="identity") +
xlab("slur") +
ylab("total count") +
scale_y_continuous(breaks = round(seq(0, max(top_data$count),
by = 2500), 1)) + theme_bw()
ggplot(top_data, aes(slur, count)) +
geom_bar(stat="identity") +
xlab("slur") +
ylab("total count") +
scale_y_continuous(breaks = round(seq(0, max(top_data$count),
by = 2500), 1)) + theme_bw() +
coord_flip()
ggplot(data, aes(date, total)) +
geom_line(na.rm = TRUE) +
xlab("Date (2020)") +
ylab("Number of Tweets Containing Slurs") +
scale_x_date(date_breaks = "1 month", minor_breaks = NULL, date_labels = "%b", limits = c(as.Date("2020-02-01"), NA)) +
scale_y_continuous(breaks = round(seq(0, max(data$total),
by = 100), 1)) + theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
ggplot(top_data, aes(slur, count)) +
geom_bar(stat="identity") +
xlab("Slur") +
ylab("Number of Tweets Containing Slur") +
scale_y_continuous(breaks = round(seq(0, max(top_data$count),
by = 2500), 1)) + theme_bw() +
coord_flip()
ggplot(top_data, aes(reorder(slur, count), count)) +
geom_bar(stat="identity") +
xlab("Slur") +
ylab("Number of Tweets Containing Slur") +
scale_y_continuous(breaks = round(seq(0, max(top_data$count),
by = 2500), 1)) + theme_bw() +
coord_flip()
slur
ggplot(top_data, aes(reorder(slur, count), count)) +
geom_bar(stat="identity") +
xlab("Slur") +
ylab("Number of Tweets Containing Slur") +
scale_y_continuous(trans = log2_trans(), breaks = round(seq(0, max(top_data$count),
by = 2500), 1)) + theme_bw() +
coord_flip()
ggplot(top_data, aes(reorder(slur, count), count)) +
geom_bar(stat="identity") +
xlab("Slur") +
ylab("Number of Tweets Containing Slur") +
scale_y_continuous(trans = "log2", breaks = round(seq(0, max(top_data$count),
by = 2500), 1)) + theme_bw() +
coord_flip()
ggplot(top_data, aes(reorder(slur, count), count)) +
geom_bar(stat="identity") +
xlab("Slur") +
ylab("Number of Tweets Containing Slur") +
scale_y_continuous(trans = "log10", breaks = round(seq(0, max(top_data$count),
by = 2500), 1)) + theme_bw() +
coord_flip()
top_data <- top_data[(top_data$count > 0),]
ggplot(top_data, aes(reorder(slur, count), count)) +
geom_bar(stat="identity") +
xlab("Slur") +
ylab("Number of Tweets Containing Slur") +
scale_y_continuous(trans = "log10", breaks = round(seq(0, max(top_data$count),
by = 2500), 1)) + theme_bw() +
coord_flip()
ggplot(top_data, aes(reorder(slur, count), count)) +
geom_bar(stat="identity") +
xlab("Slur") +
ylab("Number of Tweets Containing Slur") +
scale_y_continuous(trans = "log10") + theme_bw() +
coord_flip()
ggplot(top_data, aes(reorder(slur, count), count)) +
geom_bar(stat="identity") +
xlab("Slur") +
ylab("Number of Tweets Containing Slur") +
scale_y_continuous(trans = "log2") + theme_bw() +
coord_flip()
10
ggplot(top_data, aes(reorder(slur, count), count)) +
geom_bar(stat="identity") +
xlab("Slur") +
ylab("Number of Tweets Containing Slur") +
scale_y_continuous(trans = "log10") + theme_bw() +
coord_flip()
